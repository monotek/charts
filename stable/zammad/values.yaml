image:
  repository: zammad/zammad-docker-compose
  tag: 2.8.0-16
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    ingress.kubernetes.io/proxy-body-size: 50m
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# zammad containers can be configured by env vars
env:
  ELASTICSEARCH_HOST: zammad-elasticsearch-client
  ELASTICSEARCH_PORT: 9200
  MEMCACHED_HOST: zammad-memcached
  MEMCACHED_PORT: 11211
  POSTGRESQL_HOST: zammad-postgresql
  POSTGRESQL_PORT: 5432
  POSTGRESQL_USER: zammad
  POSTGRESQL_PASS: zammad
  POSTGRESQL_DB: zammad_production
  POSTGRESQL_DB_CREATE: true
  ZAMMAD_RAILSSERVER_HOST: zammad-railsserver
  ZAMMAD_RAILSSERVER_PORT: 3000
  ZAMMAD_WEBSOCKET_HOST: zammad-websocket
  ZAMMAD_WEBSOCKET_PORT: 6042

persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## Zammad data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 15Gi

resources:
  nginx: {}
  railsserver: {}
  scheduler: {}
  websocket: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}


elasticsearch:
  image:
    repository: "docker.elastic.co/elasticsearch/elasticsearch"
    tag: "5.6.12"
  extraInitContainers: |
    - name: "remove-xpack"
      image: "docker.elastic.co/elasticsearch/elasticsearch:5.6.12"
      command: ["/bin/bash"]
      args: ["-c", "yes | /usr/share/elasticsearch/bin/elasticsearch-plugin remove x-pack --purge"]
    - name: "plugin-install-ingest-attachment"
      image: "docker.elastic.co/elasticsearch/elasticsearch:5.6.12"
      command: ["/bin/bash"]
      args: ["-c", "yes | /usr/share/elasticsearch/bin/elasticsearch-plugin install ingest-attachment"]
    - name: "plugin-install-mapper-size"
      image: "docker.elastic.co/elasticsearch/elasticsearch:5.6.12"
      command: ["/bin/bash"]
      args: ["-c", "yes | /usr/share/elasticsearch/bin/elasticsearch-plugin install mapper-size"]
  cluster:
    env:
      MINIMUM_MASTER_NODES: "1"
    client:
      replicas: 1
    data:
      terminationGracePeriodSeconds: 60
      replicas: 1
    master:
      replicas: 1


memcached:
  replicaCount: 1


postgresql:
  postgresUser: zammad
  postgresPassword: zammad
  postgresDatabase: zammad_production
